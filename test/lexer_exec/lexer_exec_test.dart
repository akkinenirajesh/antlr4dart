library lexer_exec;

import 'quote_translation_test.dart' as quote_translation;
import 'ref_to_rule_test.dart' as ref_to_rule;
import 'slashes_test.dart' as slashes;
import 'parentheses_test.dart' as parentheses;
import 'non_greedy_termination1_test.dart' as non_greedy1;
import 'non_greedy_termination2_test.dart' as non_greedy2;
import 'greedy_optional1_test.dart' as greedy_optional1;
import 'greedy_optional2_test.dart' as greedy_optional2;
import 'greedy_closure_test.dart' as greedy_closure;
import 'non_greedy_closure_test.dart' as non_greedy_closure;
import 'greedy_positive_test.dart' as greedy_positive;
import 'non_greedy_positive_test.dart' as non_greedy_positive;
import 'recursive1_test.dart' as recursive1;
import 'recursive2_test.dart' as recursive2;
import 'greedy_configs_test.dart' as greedy_configs;
import 'non_greedy_configs_test.dart' as non_greedy_configs;
import 'action_executed_in_dfa_test.dart' as action_executed_in_dfa;
import 'more_command_test.dart' as more_command;
import 'type_command_test.dart' as type_command;
import 'combined_command_test.dart' as combined_command;
import 'lexer_mode_test.dart' as lexer_mode;
import 'lexer_mode_action_test.dart' as lexer_mode_action;
import 'keyword_id_test.dart' as keyword_id;
import 'hex_vs_id_test.dart' as hex_vs_id;
import 'eof_suffix3_test.dart' as eof_suffix3;
import 'char_set_test.dart' as char_set;
import 'char_set_plus_test.dart' as char_set_plus;
import 'char_set_not_test.dart' as char_set_not;
import 'char_set_in_set_test.dart' as char_set_in_set;
import 'char_set_range_test.dart' as char_set_range;
import 'missing_end_range_test.dart' as missing_end_range;
import 'missing_escape_char_test.dart' as missing_escape_char;
import 'escaped_char_test.dart' as escaped_char;
import 'reversed_range_test.dart' as reversed_range;
import 'char_set_with_quote1_test.dart' as char_set_with_quote1;
import 'char_set_with_quote2_test.dart' as char_set_with_quote2;
import 'position_adjusting_test.dart' as position_adjusting;
import 'large_lexer_test.dart' as large_lexer;
import 'action_placement_test.dart' as action_placement;

main() {
  quote_translation.main();
  ref_to_rule.main();
  slashes.main();
  parentheses.main();
  non_greedy1.main();
  non_greedy2.main();
  greedy_optional1.main();
  greedy_optional2.main();
  greedy_closure.main();
  non_greedy_closure.main();
  greedy_positive.main();
  non_greedy_positive.main();
  recursive1.main();
  recursive2.main();
  greedy_configs.main();
  non_greedy_configs.main();
  action_executed_in_dfa.main();
  more_command.main();
  type_command.main();
  combined_command.main();
  lexer_mode.main();
  lexer_mode_action.main();
  keyword_id.main();
  hex_vs_id.main();
  eof_suffix3.main();
  char_set.main();
  char_set_plus.main();
  char_set_not.main();
  char_set_in_set.main();
  char_set_range.main();
  missing_end_range.main();
  missing_escape_char.main();
  escaped_char.main();
  reversed_range.main();
  char_set_with_quote1.main();
  char_set_with_quote2.main();
  position_adjusting.main();
  large_lexer.main();
  action_placement.main();
}