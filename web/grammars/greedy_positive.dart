// Generated from GreedyPositive.g by antlr4dart
part of greedy_positive;

class GreedyPositive extends Lexer {

  static const int CMT = 1, WS = 2;

  static const String _serializedAtn =  "\x03\u0430\ud6d1\u8206\uad2d\u4417"
  	"\uaef1\u8d80\uaadd\x02\x04\x1a\x08\x01\x04\x02\x09\x02\x04\x03\x09\x03"
  	"\x03\x02\x03\x02\x03\x02\x03\x02\x07\x02\x0c\x0a\x02\x0c\x02\x0e\x02"
  	"\x0f\x0b\x02\x03\x02\x06\x02\x12\x0a\x02\x0d\x02\x0e\x02\x13\x03\x03"
  	"\x06\x03\x17\x0a\x03\x0d\x03\x0e\x03\x18\x03\x0d\x02\x04\x03\x03\x05"
  	"\x04\x03\x02\x03\x04\x02\x0b\x0b\x22\x22\x1c\x02\x03\x03\x02\x02\x02"
  	"\x02\x05\x03\x02\x02\x02\x03\x11\x03\x02\x02\x02\x05\x16\x03\x02\x02"
  	"\x02\x07\x08\x07\x31\x02\x02\x08\x09\x07\x31\x02\x02\x09\x0d\x03\x02"
  	"\x02\x02\x0a\x0c\x0b\x02\x02\x02\x0b\x0a\x03\x02\x02\x02\x0c\x0f\x03"
  	"\x02\x02\x02\x0d\x0e\x03\x02\x02\x02\x0d\x0b\x03\x02\x02\x02\x0e\x10"
  	"\x03\x02\x02\x02\x0f\x0d\x03\x02\x02\x02\x10\x12\x07\x0c\x02\x02\x11"
  	"\x07\x03\x02\x02\x02\x12\x13\x03\x02\x02\x02\x13\x11\x03\x02\x02\x02"
  	"\x13\x14\x03\x02\x02\x02\x14\x04\x03\x02\x02\x02\x15\x17\x09\x02\x02"
  	"\x02\x16\x15\x03\x02\x02\x02\x17\x18\x03\x02\x02\x02\x18\x16\x03\x02"
  	"\x02\x02\x18\x19\x03\x02\x02\x02\x19\x06\x03\x02\x02\x02\x06\x02\x0d"
  	"\x13\x18\x02";

  final Atn atn = AtnSimulator.deserialize(_serializedAtn);

  final sharedContextCache = new PredictionContextCache();

  final List<String> modeNames = [
    "DEFAULT_MODE"
  ];

  final List<String> tokenNames = [
    "'\\u0000'", "'\\u0001'", "'\\u0002'"
  ];

  final List<String> ruleNames = [
    "CMT", "WS"
  ]; 
  	
  GreedyPositive(StringSource input) : super(input) {
    var _decisionToDfa = new List<Dfa>(atn.numberOfDecisions);
    for (int i = 0; i < atn.numberOfDecisions; i++) {
      _decisionToDfa[i] = new Dfa(atn.getDecisionState(i), i);
    }
    interpreter = new LexerAtnSimulator(atn, _decisionToDfa, sharedContextCache, this);
  }

  String get serializedAtn => _serializedAtn;

  String get grammarFileName => "GreedyPositive.g";
}