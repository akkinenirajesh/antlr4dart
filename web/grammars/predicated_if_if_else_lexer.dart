// Generated from PredicatedIfIfElse.g by antlr4dart
part of predicated_if_if_else;

class PredicatedIfIfElseLexer extends Lexer {

  static const int T__0 = 1, ELSE = 2, ID = 3, WS = 4;

  static const String _serializedAtn =  "\x03\u0430\ud6d1\u8206\uad2d\u4417"
  	"\uaef1\u8d80\uaadd\x02\x06\x1f\x08\x01\x04\x02\x09\x02\x04\x03\x09\x03"
  	"\x04\x04\x09\x04\x04\x05\x09\x05\x03\x02\x03\x02\x03\x02\x03\x03\x03"
  	"\x03\x03\x03\x03\x03\x03\x03\x03\x04\x06\x04\x15\x0a\x04\x0d\x04\x0e"
  	"\x04\x16\x03\x05\x06\x05\x1a\x0a\x05\x0d\x05\x0e\x05\x1b\x03\x05\x03"
  	"\x05\x02\x02\x06\x03\x03\x05\x04\x07\x05\x09\x06\x03\x02\x04\x04\x02"
  	"\x43\x5c\x63\x7c\x04\x02\x0b\x0c\x22\x22\x20\x02\x03\x03\x02\x02\x02"
  	"\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\x09\x03\x02\x02"
  	"\x02\x03\x0b\x03\x02\x02\x02\x05\x0e\x03\x02\x02\x02\x07\x14\x03\x02"
  	"\x02\x02\x09\x19\x03\x02\x02\x02\x0b\x0c\x07\x6b\x02\x02\x0c\x0d\x07"
  	"\x68\x02\x02\x0d\x04\x03\x02\x02\x02\x0e\x0f\x07\x67\x02\x02\x0f\x10"
  	"\x07\x6e\x02\x02\x10\x11\x07\x75\x02\x02\x11\x12\x07\x67\x02\x02\x12"
  	"\x06\x03\x02\x02\x02\x13\x15\x09\x02\x02\x02\x14\x13\x03\x02\x02\x02"
  	"\x15\x16\x03\x02\x02\x02\x16\x14\x03\x02\x02\x02\x16\x17\x03\x02\x02"
  	"\x02\x17\x08\x03\x02\x02\x02\x18\x1a\x09\x03\x02\x02\x19\x18\x03\x02"
  	"\x02\x02\x1a\x1b\x03\x02\x02\x02\x1b\x19\x03\x02\x02\x02\x1b\x1c\x03"
  	"\x02\x02\x02\x1c\x1d\x03\x02\x02\x02\x1d\x1e\x08\x05\x02\x02\x1e\x0a"
  	"\x03\x02\x02\x02\x05\x02\x16\x1b\x03\x08\x02\x02";

  final Atn atn = AtnSimulator.deserialize(_serializedAtn);

  final sharedContextCache = new PredictionContextCache();

  final List<String> modeNames = [
    "DEFAULT_MODE"
  ];

  final List<String> tokenNames = [
    "'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'"
  ];

  final List<String> ruleNames = [
    "T__0", "ELSE", "ID", "WS"
  ]; 
  	
  PredicatedIfIfElseLexer(StringSource input) : super(input) {
    var _decisionToDfa = new List<Dfa>(atn.numberOfDecisions);
    for (int i = 0; i < atn.numberOfDecisions; i++) {
      _decisionToDfa[i] = new Dfa(atn.getDecisionState(i), i);
    }
    interpreter = new LexerAtnSimulator(atn, _decisionToDfa, sharedContextCache, this);
  }

  String get serializedAtn => _serializedAtn;

  String get grammarFileName => "PredicatedIfIfElse.g";
}